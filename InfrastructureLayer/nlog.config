<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Info"
      internalLogFile="c:\logs\internal-nlog-AspNetCore.txt">

  <!-- enable asp.net core layout renderers -->
  <extensions>
    <add assembly="NLog.Web.AspNetCore"/>
  </extensions>

  <!-- the targets to write to -->
  <targets>
    <!-- File Target for all log messages with basic details -->
    <target xsi:type="File" name="allfile" fileName="c:\temp\nlog-AspNetCore-allLocal-${shortdate}.log"
            layout="${longdate}|${event-properties:item=EventId:whenEmpty=0}|${level:uppercase=true}|${logger}|${message} ${exception:format=tostring}|TransactionId: ${scopeproperty:TransactionId}" />

    <!-- File Target for own log messages with extra web details using some ASP.NET core renderers -->
    <target xsi:type="File" name="ownFile-web" fileName="c:\temp\nlog-AspNetCore-ownLocal-${shortdate}.log"
            layout="${longdate}|${event-properties:item=EventId:whenEmpty=0}|${level:uppercase=true}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}|TransactionId: ${scopeproperty:TransactionId}" />

    <!--Console Target for hosting lifetime messages to improve Docker / Visual Studio startup detection -->
    <target xsi:type="Console" name="lifetimeConsole" layout="${MicrosoftConsoleLayout}" />

    <!-- Error File Target for all log messages with basic details -->
    <target xsi:type="File" name="localError" fileName="c:\logs\nlog-AspNetCore-allLocalError-${shortdate}.log"
            layout="${longdate}|${event-properties:item=EventId:whenEmpty=0}|${level:uppercase=true}|${logger}|${message} ${exception:format=tostring}" />

    <!--Database Target for create log messages with basic details -->
    <target xsi:type="Database"
            name="dbCreate"
            connectionString="Server=FRIZTO-NOTE\SQLEXPRESS;Database=FrenetExamLogsDB;Trusted_Connection=True;Trust Server Certificate=True;MultipleActiveResultSets=true"
            commandType="StoredProcedure"
            commandText="[dbo].[NLog_AddEntry_p]">
      <parameter name="@machineName"    layout="${machinename}" />
      <parameter name="@logged"         layout="${date}" />
      <parameter name="@level"          layout="${level}" />
      <parameter name="@message"        layout="${message}" />
      <parameter name="@logger"         layout="${logger}" />
      <parameter name="@properties"     layout="${all-event-properties:separator=|}" />
      <parameter name="@exception"      layout="${exception:tostring}" />
      <parameter name="@transactionId"  layout="${scopeproperty:TransactionId}" />
    </target>

    <!--Database Target for update log messages with basic details -->
    <target xsi:type="Database"
            name="dbUpdate"
            connectionString="Server=FRIZTO-NOTE\SQLEXPRESS;Database=FrenetExamLogsDB;Trusted_Connection=True;Trust Server Certificate=True;MultipleActiveResultSets=true"
            commandType="StoredProcedure"
            commandText="[dbo].[NLog_UpdateEntry_p]">

      <parameter name="@id"             layout="${event-context:item=id}" />
      <parameter name="@machineName"    layout="${machinename}" />
      <parameter name="@logged"         layout="${date}" />
      <parameter name="@level"          layout="${level}" />
      <parameter name="@message"        layout="${message}" />
      <parameter name="@logger"         layout="${logger}" />
      <parameter name="@properties"     layout="${all-event-properties:separator=|}" />
      <parameter name="@exception"      layout="${exception:tostring}" />
      <parameter name="@transactionId"  layout="${scopeproperty:TransactionId}" />
    </target>

    <!--Database Target for delete log messages with basic details -->
    <target xsi:type="Database"
            name="dbDelete"
            connectionString="Server=FRIZTO-NOTE\SQLEXPRESS;Database=FrenetExamLogsDB;Trusted_Connection=True;Trust Server Certificate=True;MultipleActiveResultSets=true"
            commandType="StoredProcedure"
            commandText="[dbo].[NLog_DeleteEntry_p]">

      <parameter name="@id" layout="${event-context:item=id}" />
      <parameter name="@transactionId"  layout="${scopeproperty:TransactionId}" />
    </target>
  </targets>

  <!-- rules to map from logger name to target -->
  <rules>
    <!--All logs, including from Microsoft-->
    <logger name="*" minlevel="Trace" writeTo="allfile" />

    <!--Output hosting lifetime messages to console target for faster startup detection -->
    <logger name="Microsoft.Hosting.Lifetime" minlevel="Info" writeTo="lifetimeConsole, ownFile-web" final="true" />

    <!--Skip non-critical Microsoft logs and so log only own logs (BlackHole) -->
    <logger name="Microsoft.*" maxlevel="Info" final="true" />
    <logger name="System.Net.Http.*" maxlevel="Info" final="true" />

    <logger name="*" minlevel="Trace" writeTo="ownFile-web" />

    <!-- Rule for Error Operation -->
    <logger name="*" minlevel="Error" maxlevel="Info" writeTo="localError, lifetimeConsole" final="true" />

    <!-- Rule for Create Operation -->
    <logger name="*" minlevel="Info" maxlevel="Info" writeTo="dbCreate, lifetimeConsole" final="true" />

    <!-- Rule for Update Operation -->
    <logger name="*" minlevel="Info" maxlevel="Info" writeTo="dbUpdate, lifetimeConsole" final="true" />

    <!-- Rule for Delete Operation -->
    <logger name="*" minlevel="Info" maxlevel="Info" writeTo="dbDelete, lifetimeConsole" final="true" />
  </rules>
</nlog>